---

# Отключаем мониторинг.
- name: Prometheus | Derigester consul
  uri:
    url: "http://{{ consul_vmagent }}:{{ consul_port }}/v1/agent/service/deregister/{{ inventory_hostname }}_{{ deploy_name_3 }}"
    method: PUT

# Останавливаем контейнер.
- name: Docker Update | Stop a container 3
  docker_container:
    name: "{{ deploy_name_3 }}"
    state: stopped
    timeout: 600
  ignore_errors: yes

# Удаляем контейнер.
- name: Docker Update | Delete a container 3
  docker_container:
    name: "{{ deploy_name_3 }}"
    state: absent
    timeout: 600
  ignore_errors: yes

# Создаём файл с переменными
- name: Docker Env | Configure env file 3
  template:
    src: "env3.j2"
    dest: "{{ app_dir }}/.env3"

# Создаём контейнер заново.
- name: Docker Update | Update a container 3
  docker_container:
    name: "{{ deploy_name_3 }}"
    image: "{{ deploy_image }}"
    ports: "{{ deploy_ports_3 }}"
    exposed_ports: "{{ deploy_exposed_ports }}"
    volumes: "{{ deploy_volumes_3 }}"
    env_file: "{{ app_dir }}/.env3"
    etc_hosts: >
      {
        "{{ elk_host_name }}": "{{ elk_host_ip }}"
      }
    restart_policy: always
    state: started
    timeout: 600

# Включаем мониторинг.
- name: Prometheus | Register consul
  uri:
    url: http://{{ consul_vmagent }}:{{ consul_port }}/v1/agent/service/register
    method: PUT
    body: {"id":"{{ inventory_hostname }}_{{ deploy_name_3 }}","name":"health_check","address":"{{ ansible_hostname }}.otr.ru:{{ env_port_3 }}/actuator/health","tags":["health_check","{{ var_env }}"]}
    body_format: json
